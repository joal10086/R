<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	
    <!-- Hibernate setting -->

    <!-- session factory settingï¼Œread Hibernate's config -->
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:init.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="properties" ref="dataSourceProperties"/>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>
	
	<bean id="dataSourceProperties" class="com.utils.PropertiesEncryptFactoryBean">  
        <property name="properties">  
            <props>
                <!-- <prop key="jdbcUrl">${datasource.url}</prop> -->  
                <prop key="user">${datasource.username}</prop>  
                <prop key="password">${datasource.password}</prop>  
            </props>  
        </property>  
    </bean>	
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		 
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
				</prop>
			</props>
		</property>
		
		<property name="annotatedClasses">
	     <list>
	         <value>com.db.model.Department</value>
	         <value>com.db.model.Personal</value>
	         <value>com.db.model.Item</value>
	         <value>com.db.model.Payment</value>
	         <value>com.db.model.Use</value>
	     </list>
		</property>
	</bean>   
    
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
		<property name="sessionFactory" ref="sessionFactory"/>  
	</bean> 

	<!-- the transactional advice -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- all methods starting with get are read-only 
			<tx:method name="get*" read-only="true"/>
			-->
			<!-- other methods will get the default transaction settings -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="allservices" expression="(execution(* com.service.impl.*.*(..))) or(execution(* com.dao.impl.*.*(..))) or (execution(* com.action.*.*(..))) or (execution(* activity.dao.*.*(..))) or (execution(* activity.service.*.*(..)))
		 or (execution(* game.action.*.*(..))) or (execution(* game.service.*.*(..))) 
		 or (execution(* payment.*.*(..))) or (execution(* payment.base.*.*(..))) "/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allservices" />
	</aop:config> 
	
	<import resource="applicationContext-dao.xml" /> 
	<import resource="applicationContext-service.xml" /> 
	<import resource="applicationContext-action.xml" /> 
	
	
</beans>